scalar Date

enum EnumUserRole {
  user
  admin
  staff
}

enum EnumUserThumbsSmSize {
  sm
  md
  lg
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

# The `ID` scalar type represents a unique MongoDB identifier in collection.
# MongoDB by default use 12-byte ObjectId value
# (https://docs.mongodb.com/manual/reference/bson-types/#objectid). But MongoDB
# also may accepts string or integer as correct values for _id field.
scalar MongoID

type Mutation {
  loginByUsernamePassword(email: String, password: String): JSON
  loginByGoogle(accessToken: String): JSON
  loginByFacebook(accessToken: String): JSON
  createUser(displayName: String, email: String, password: String): JSON
}

type Query {
  getUser(_id: MongoID!): User
}

type User {
  email: String
  displayName: String
  thumbs: UserThumbs
  active: Boolean
  role: [EnumUserRole]
  facebookProvider: JSON
  googleProvider: JSON
  _id: MongoID!
  updatedAt: Date
  createdAt: Date
}

type UserThumbs {
  sm: UserThumbsSm
  md: UserThumbsSm
  lg: UserThumbsSm
}

type UserThumbsSm {
  url: String
  size: EnumUserThumbsSmSize
}
